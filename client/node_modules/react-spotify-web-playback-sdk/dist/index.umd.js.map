{"version":3,"file":"index.umd.js","sources":["../src/constant.ts","../src/webPlaybackSDKReady.tsx","../src/spotifyPlayer.tsx","../src/device.tsx","../src/errorState.tsx","../src/playbackState.tsx","../src/webPlaybackSDK.tsx"],"sourcesContent":["export const MUST_BE_WRAPPED_MESSAGE =\n  \"Component must be wrapped with WebPlaybackSDK.\";\n\nexport const SPOTIFY_WEB_PLAYBACK_SDK_URL = \"https://sdk.scdn.co/spotify-player.js\";\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { MUST_BE_WRAPPED_MESSAGE } from \"./constant\";\n\nconst WebPlaybackSDKReadyContext = createContext<boolean | undefined>(undefined);\n\nexport const WebPlaybackSDKReadyProvider: React.FC<{\n  children?: React.ReactNode;\n}> = ({ children }) => {\n  const [webPlaybackSDKReady, setWebPlaybackSDKReady] = useState(false);\n\n  useEffect(() => {\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      setWebPlaybackSDKReady(true);\n    };\n  }, []);\n\n  return (\n    <WebPlaybackSDKReadyContext.Provider value={webPlaybackSDKReady}>\n      {children}\n    </WebPlaybackSDKReadyContext.Provider>\n  );\n};\n\nexport function useWebPlaybackSDKReady() {\n  const value = useContext(WebPlaybackSDKReadyContext);\n\n  if (value === undefined) throw new Error(MUST_BE_WRAPPED_MESSAGE);\n\n  return value;\n}\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { MUST_BE_WRAPPED_MESSAGE } from \"./constant\";\nimport { useWebPlaybackSDKReady } from \"./webPlaybackSDKReady\";\n\nconst PlayerContext = createContext<Spotify.Player | null | undefined>(undefined);\n\ntype ProviderProps = {\n  initialDeviceName: Spotify.PlayerInit[\"name\"];\n  getOAuthToken: Spotify.PlayerInit[\"getOAuthToken\"];\n  initialVolume?: Spotify.PlayerInit[\"volume\"];\n  connectOnInitialized: boolean;\n  children?: React.ReactNode;\n};\n\nexport const SpotifyPlayerProvider: React.FC<ProviderProps> = ({\n  children,\n  initialDeviceName,\n  getOAuthToken,\n  initialVolume,\n  connectOnInitialized,\n}) => {\n  const [player, setPlayer] = useState<Spotify.Player | null>(null);\n  const webPlaybackSDKReady = useWebPlaybackSDKReady();\n\n  // to get the latest function.\n  const getOAuthTokenRef = useRef(getOAuthToken);\n  getOAuthTokenRef.current = getOAuthToken;\n\n  // create Spotify.Player instance.\n  useEffect(\n    () => {\n      if (webPlaybackSDKReady) {\n        const player = new Spotify.Player({\n          name: initialDeviceName,\n          getOAuthToken: callback => getOAuthTokenRef.current(callback),\n          volume: initialVolume,\n        });\n\n        setPlayer(player);\n\n        if (connectOnInitialized) {\n          player.connect();\n        }\n\n        return () => player.disconnect();\n      }\n    },\n    // `deviceName` and `volume` are intentionally not passed.\n    // When they are changed, they will be applied with the following useUpdateEffect.\n    [connectOnInitialized, webPlaybackSDKReady],\n  );\n\n  return <PlayerContext.Provider value={player} children={children} />;\n};\n\nexport function useSpotifyPlayer() {\n  const value = useContext(PlayerContext);\n\n  if (value === undefined) throw new Error(MUST_BE_WRAPPED_MESSAGE);\n\n  return value;\n}\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { MUST_BE_WRAPPED_MESSAGE } from \"./constant\";\nimport { useSpotifyPlayer } from \"./spotifyPlayer\";\n\nexport type PlayerDevice = Spotify.WebPlaybackInstance & {\n  status: \"ready\" | \"not_ready\";\n};\n\nconst DeviceContext = createContext<PlayerDevice | null | undefined>(undefined);\n\nexport const DeviceProvider: React.FC<{ children?: React.ReactNode }> = ({\n  children,\n}) => {\n  const [device, setDevice] = useState<PlayerDevice | null>(null);\n  const player = useSpotifyPlayer();\n\n  useEffect(() => {\n    if (player === null) return;\n\n    const ready = (device: Spotify.WebPlaybackInstance) => {\n      setDevice({ ...device, status: \"ready\" });\n    };\n\n    const notReady = (device: Spotify.WebPlaybackInstance) => {\n      setDevice({ ...device, status: \"not_ready\" });\n    };\n\n    player.addListener(\"ready\", ready);\n    player.addListener(\"not_ready\", notReady);\n\n    return () => {\n      player.removeListener(\"ready\", ready);\n      player.removeListener(\"not_ready\", notReady);\n    };\n  }, [player]);\n\n  return <DeviceContext.Provider value={device} children={children} />;\n};\n\nexport function usePlayerDevice() {\n  const value = useContext(DeviceContext);\n\n  if (value === undefined) throw new Error(MUST_BE_WRAPPED_MESSAGE);\n\n  return value;\n}\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { MUST_BE_WRAPPED_MESSAGE } from \"./constant\";\nimport { useSpotifyPlayer } from \"./spotifyPlayer\";\n\nexport type ErrorState = Spotify.Error & { type: Spotify.ErrorTypes };\n\nconst ErrorStateContext = createContext<ErrorState | null | undefined>(undefined);\n\nexport const ErrorStateProvider: React.FC<{ children?: React.ReactNode }> = ({\n  children,\n}) => {\n  const [errorState, setErrorState] = useState<ErrorState | null>(null);\n  const player = useSpotifyPlayer();\n\n  useEffect(() => {\n    if (player === null) return;\n\n    const onInitializationError = (error: Spotify.Error) => {\n      setErrorState({ ...error, type: \"initialization_error\" });\n    };\n\n    const onAuthenticationError = (error: Spotify.Error) => {\n      setErrorState({ ...error, type: \"authentication_error\" });\n    };\n\n    const onAccountError = (error: Spotify.Error) => {\n      setErrorState({ ...error, type: \"account_error\" });\n    };\n\n    const onPlaybackError = (error: Spotify.Error) => {\n      setErrorState({ ...error, type: \"playback_error\" });\n    };\n\n    player.addListener(\"initialization_error\", onInitializationError);\n    player.addListener(\"authentication_error\", onAuthenticationError);\n    player.addListener(\"account_error\", onAccountError);\n    player.addListener(\"playback_error\", onPlaybackError);\n\n    return () => {\n      player.removeListener(\"initialization_error\", onInitializationError);\n      player.removeListener(\"authentication_error\", onAuthenticationError);\n      player.removeListener(\"account_error\", onAccountError);\n      player.removeListener(\"playback_error\", onPlaybackError);\n    };\n  }, [player]);\n\n  return <ErrorStateContext.Provider value={errorState} children={children} />;\n};\n\nexport function useErrorState() {\n  const value = useContext(ErrorStateContext);\n\n  if (value === undefined) throw new Error(MUST_BE_WRAPPED_MESSAGE);\n\n  return value;\n}\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { MUST_BE_WRAPPED_MESSAGE } from \"./constant\";\nimport { useSpotifyPlayer } from \"./spotifyPlayer\";\n\nconst PlaybackStateContext = createContext<Spotify.PlaybackState | null | undefined>(\n  undefined,\n);\n\nexport const PlaybackStateProvider: React.FC<{ children?: React.ReactNode }> = ({\n  children,\n}) => {\n  const [playbackState, setPlaybackState] = useState<Spotify.PlaybackState | null>(\n    null,\n  );\n\n  const player = useSpotifyPlayer();\n\n  useEffect(() => {\n    if (player === null) return;\n\n    const playerStateChanged = (state: Spotify.PlaybackState) => {\n      setPlaybackState(state);\n    };\n\n    player.addListener(\"player_state_changed\", playerStateChanged);\n\n    return () => player.removeListener(\"player_state_changed\", playerStateChanged);\n  }, [player]);\n\n  return <PlaybackStateContext.Provider value={playbackState} children={children} />;\n};\n\nexport function usePlaybackState(\n  interval = false,\n  durationMS = 1000,\n): Spotify.PlaybackState | null {\n  const fromContext = useContext(PlaybackStateContext);\n\n  if (fromContext === undefined) throw new Error(MUST_BE_WRAPPED_MESSAGE);\n\n  const [playbackState, setPlaybackState] = useState(fromContext);\n\n  const player = useSpotifyPlayer();\n\n  useEffect(() => setPlaybackState(fromContext), [fromContext]);\n\n  const playbackStateIsNull = playbackState === null;\n  useEffect(() => {\n    if (!interval) return;\n    if (player === null) return;\n    if (playbackStateIsNull) return;\n\n    if (playbackState!.paused) return;\n\n    const intervalId = window.setInterval(async () => {\n      const newState = await player.getCurrentState();\n      setPlaybackState(newState);\n    }, durationMS);\n\n    return () => window.clearInterval(intervalId);\n  }, [interval, player, playbackStateIsNull, playbackState?.paused, durationMS]);\n\n  return playbackState;\n}\n","import React, { useEffect } from \"react\";\nimport { SPOTIFY_WEB_PLAYBACK_SDK_URL } from \"./constant\";\nimport { DeviceProvider } from \"./device\";\nimport { ErrorStateProvider } from \"./errorState\";\nimport { PlaybackStateProvider } from \"./playbackState\";\nimport { SpotifyPlayerProvider } from \"./spotifyPlayer\";\nimport { WebPlaybackSDKReadyProvider } from \"./webPlaybackSDKReady\";\n\nexport type WebPlaybackSDKProps = {\n  initialDeviceName: Spotify.PlayerInit[\"name\"];\n  getOAuthToken: Spotify.PlayerInit[\"getOAuthToken\"];\n  initialVolume?: Spotify.PlayerInit[\"volume\"];\n  connectOnInitialized?: boolean;\n  children?: React.ReactNode;\n};\n\nexport const WebPlaybackSDK: React.FC<WebPlaybackSDKProps> = ({\n  children,\n  initialDeviceName,\n  getOAuthToken,\n  initialVolume,\n  connectOnInitialized = true,\n}) => {\n  useEffect(() => {\n    // load Web Playback SDK.\n    const script = document.createElement(\"script\");\n    script.src = SPOTIFY_WEB_PLAYBACK_SDK_URL;\n    document.body.appendChild(script);\n\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, []);\n\n  return (\n    <WebPlaybackSDKReadyProvider>\n      <SpotifyPlayerProvider\n        initialDeviceName={initialDeviceName}\n        getOAuthToken={getOAuthToken}\n        initialVolume={initialVolume}\n        connectOnInitialized={connectOnInitialized}>\n        <PlaybackStateProvider>\n          <DeviceProvider>\n            <ErrorStateProvider>{children}</ErrorStateProvider>\n          </DeviceProvider>\n        </PlaybackStateProvider>\n      </SpotifyPlayerProvider>\n    </WebPlaybackSDKReadyProvider>\n  );\n};\n"],"names":["MUST_BE_WRAPPED_MESSAGE","SPOTIFY_WEB_PLAYBACK_SDK_URL","WebPlaybackSDKReadyContext","createContext","undefined","WebPlaybackSDKReadyProvider","children","useState","webPlaybackSDKReady","setWebPlaybackSDKReady","useEffect","window","onSpotifyWebPlaybackSDKReady","React","Provider","value","useWebPlaybackSDKReady","useContext","Error","PlayerContext","SpotifyPlayerProvider","initialDeviceName","getOAuthToken","initialVolume","connectOnInitialized","player","setPlayer","getOAuthTokenRef","useRef","current","Spotify","Player","name","callback","volume","connect","disconnect","useSpotifyPlayer","DeviceContext","DeviceProvider","device","setDevice","ready","status","notReady","addListener","removeListener","usePlayerDevice","ErrorStateContext","ErrorStateProvider","errorState","setErrorState","onInitializationError","error","type","onAuthenticationError","onAccountError","onPlaybackError","useErrorState","PlaybackStateContext","PlaybackStateProvider","playbackState","setPlaybackState","playerStateChanged","state","usePlaybackState","interval","durationMS","fromContext","playbackStateIsNull","paused","intervalId","setInterval","getCurrentState","newState","clearInterval","WebPlaybackSDK","script","document","createElement","src","body","appendChild","removeChild"],"mappings":"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"}