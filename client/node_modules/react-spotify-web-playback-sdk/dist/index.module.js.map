{"version":3,"file":"index.module.js","sources":["../src/constant.ts","../src/webPlaybackSDKReady.tsx","../src/spotifyPlayer.tsx","../src/device.tsx","../src/errorState.tsx","../src/playbackState.tsx","../src/webPlaybackSDK.tsx"],"sourcesContent":["export const MUST_BE_WRAPPED_MESSAGE =\n  \"Component must be wrapped with WebPlaybackSDK.\";\n\nexport const SPOTIFY_WEB_PLAYBACK_SDK_URL = \"https://sdk.scdn.co/spotify-player.js\";\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { MUST_BE_WRAPPED_MESSAGE } from \"./constant\";\n\nconst WebPlaybackSDKReadyContext = createContext<boolean | undefined>(undefined);\n\nexport const WebPlaybackSDKReadyProvider: React.FC<{\n  children?: React.ReactNode;\n}> = ({ children }) => {\n  const [webPlaybackSDKReady, setWebPlaybackSDKReady] = useState(false);\n\n  useEffect(() => {\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      setWebPlaybackSDKReady(true);\n    };\n  }, []);\n\n  return (\n    <WebPlaybackSDKReadyContext.Provider value={webPlaybackSDKReady}>\n      {children}\n    </WebPlaybackSDKReadyContext.Provider>\n  );\n};\n\nexport function useWebPlaybackSDKReady() {\n  const value = useContext(WebPlaybackSDKReadyContext);\n\n  if (value === undefined) throw new Error(MUST_BE_WRAPPED_MESSAGE);\n\n  return value;\n}\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { MUST_BE_WRAPPED_MESSAGE } from \"./constant\";\nimport { useWebPlaybackSDKReady } from \"./webPlaybackSDKReady\";\n\nconst PlayerContext = createContext<Spotify.Player | null | undefined>(undefined);\n\ntype ProviderProps = {\n  initialDeviceName: Spotify.PlayerInit[\"name\"];\n  getOAuthToken: Spotify.PlayerInit[\"getOAuthToken\"];\n  initialVolume?: Spotify.PlayerInit[\"volume\"];\n  connectOnInitialized: boolean;\n  children?: React.ReactNode;\n};\n\nexport const SpotifyPlayerProvider: React.FC<ProviderProps> = ({\n  children,\n  initialDeviceName,\n  getOAuthToken,\n  initialVolume,\n  connectOnInitialized,\n}) => {\n  const [player, setPlayer] = useState<Spotify.Player | null>(null);\n  const webPlaybackSDKReady = useWebPlaybackSDKReady();\n\n  // to get the latest function.\n  const getOAuthTokenRef = useRef(getOAuthToken);\n  getOAuthTokenRef.current = getOAuthToken;\n\n  // create Spotify.Player instance.\n  useEffect(\n    () => {\n      if (webPlaybackSDKReady) {\n        const player = new Spotify.Player({\n          name: initialDeviceName,\n          getOAuthToken: callback => getOAuthTokenRef.current(callback),\n          volume: initialVolume,\n        });\n\n        setPlayer(player);\n\n        if (connectOnInitialized) {\n          player.connect();\n        }\n\n        return () => player.disconnect();\n      }\n    },\n    // `deviceName` and `volume` are intentionally not passed.\n    // When they are changed, they will be applied with the following useUpdateEffect.\n    [connectOnInitialized, webPlaybackSDKReady],\n  );\n\n  return <PlayerContext.Provider value={player} children={children} />;\n};\n\nexport function useSpotifyPlayer() {\n  const value = useContext(PlayerContext);\n\n  if (value === undefined) throw new Error(MUST_BE_WRAPPED_MESSAGE);\n\n  return value;\n}\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { MUST_BE_WRAPPED_MESSAGE } from \"./constant\";\nimport { useSpotifyPlayer } from \"./spotifyPlayer\";\n\nexport type PlayerDevice = Spotify.WebPlaybackInstance & {\n  status: \"ready\" | \"not_ready\";\n};\n\nconst DeviceContext = createContext<PlayerDevice | null | undefined>(undefined);\n\nexport const DeviceProvider: React.FC<{ children?: React.ReactNode }> = ({\n  children,\n}) => {\n  const [device, setDevice] = useState<PlayerDevice | null>(null);\n  const player = useSpotifyPlayer();\n\n  useEffect(() => {\n    if (player === null) return;\n\n    const ready = (device: Spotify.WebPlaybackInstance) => {\n      setDevice({ ...device, status: \"ready\" });\n    };\n\n    const notReady = (device: Spotify.WebPlaybackInstance) => {\n      setDevice({ ...device, status: \"not_ready\" });\n    };\n\n    player.addListener(\"ready\", ready);\n    player.addListener(\"not_ready\", notReady);\n\n    return () => {\n      player.removeListener(\"ready\", ready);\n      player.removeListener(\"not_ready\", notReady);\n    };\n  }, [player]);\n\n  return <DeviceContext.Provider value={device} children={children} />;\n};\n\nexport function usePlayerDevice() {\n  const value = useContext(DeviceContext);\n\n  if (value === undefined) throw new Error(MUST_BE_WRAPPED_MESSAGE);\n\n  return value;\n}\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { MUST_BE_WRAPPED_MESSAGE } from \"./constant\";\nimport { useSpotifyPlayer } from \"./spotifyPlayer\";\n\nexport type ErrorState = Spotify.Error & { type: Spotify.ErrorTypes };\n\nconst ErrorStateContext = createContext<ErrorState | null | undefined>(undefined);\n\nexport const ErrorStateProvider: React.FC<{ children?: React.ReactNode }> = ({\n  children,\n}) => {\n  const [errorState, setErrorState] = useState<ErrorState | null>(null);\n  const player = useSpotifyPlayer();\n\n  useEffect(() => {\n    if (player === null) return;\n\n    const onInitializationError = (error: Spotify.Error) => {\n      setErrorState({ ...error, type: \"initialization_error\" });\n    };\n\n    const onAuthenticationError = (error: Spotify.Error) => {\n      setErrorState({ ...error, type: \"authentication_error\" });\n    };\n\n    const onAccountError = (error: Spotify.Error) => {\n      setErrorState({ ...error, type: \"account_error\" });\n    };\n\n    const onPlaybackError = (error: Spotify.Error) => {\n      setErrorState({ ...error, type: \"playback_error\" });\n    };\n\n    player.addListener(\"initialization_error\", onInitializationError);\n    player.addListener(\"authentication_error\", onAuthenticationError);\n    player.addListener(\"account_error\", onAccountError);\n    player.addListener(\"playback_error\", onPlaybackError);\n\n    return () => {\n      player.removeListener(\"initialization_error\", onInitializationError);\n      player.removeListener(\"authentication_error\", onAuthenticationError);\n      player.removeListener(\"account_error\", onAccountError);\n      player.removeListener(\"playback_error\", onPlaybackError);\n    };\n  }, [player]);\n\n  return <ErrorStateContext.Provider value={errorState} children={children} />;\n};\n\nexport function useErrorState() {\n  const value = useContext(ErrorStateContext);\n\n  if (value === undefined) throw new Error(MUST_BE_WRAPPED_MESSAGE);\n\n  return value;\n}\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { MUST_BE_WRAPPED_MESSAGE } from \"./constant\";\nimport { useSpotifyPlayer } from \"./spotifyPlayer\";\n\nconst PlaybackStateContext = createContext<Spotify.PlaybackState | null | undefined>(\n  undefined,\n);\n\nexport const PlaybackStateProvider: React.FC<{ children?: React.ReactNode }> = ({\n  children,\n}) => {\n  const [playbackState, setPlaybackState] = useState<Spotify.PlaybackState | null>(\n    null,\n  );\n\n  const player = useSpotifyPlayer();\n\n  useEffect(() => {\n    if (player === null) return;\n\n    const playerStateChanged = (state: Spotify.PlaybackState) => {\n      setPlaybackState(state);\n    };\n\n    player.addListener(\"player_state_changed\", playerStateChanged);\n\n    return () => player.removeListener(\"player_state_changed\", playerStateChanged);\n  }, [player]);\n\n  return <PlaybackStateContext.Provider value={playbackState} children={children} />;\n};\n\nexport function usePlaybackState(\n  interval = false,\n  durationMS = 1000,\n): Spotify.PlaybackState | null {\n  const fromContext = useContext(PlaybackStateContext);\n\n  if (fromContext === undefined) throw new Error(MUST_BE_WRAPPED_MESSAGE);\n\n  const [playbackState, setPlaybackState] = useState(fromContext);\n\n  const player = useSpotifyPlayer();\n\n  useEffect(() => setPlaybackState(fromContext), [fromContext]);\n\n  const playbackStateIsNull = playbackState === null;\n  useEffect(() => {\n    if (!interval) return;\n    if (player === null) return;\n    if (playbackStateIsNull) return;\n\n    if (playbackState!.paused) return;\n\n    const intervalId = window.setInterval(async () => {\n      const newState = await player.getCurrentState();\n      setPlaybackState(newState);\n    }, durationMS);\n\n    return () => window.clearInterval(intervalId);\n  }, [interval, player, playbackStateIsNull, playbackState?.paused, durationMS]);\n\n  return playbackState;\n}\n","import React, { useEffect } from \"react\";\nimport { SPOTIFY_WEB_PLAYBACK_SDK_URL } from \"./constant\";\nimport { DeviceProvider } from \"./device\";\nimport { ErrorStateProvider } from \"./errorState\";\nimport { PlaybackStateProvider } from \"./playbackState\";\nimport { SpotifyPlayerProvider } from \"./spotifyPlayer\";\nimport { WebPlaybackSDKReadyProvider } from \"./webPlaybackSDKReady\";\n\nexport type WebPlaybackSDKProps = {\n  initialDeviceName: Spotify.PlayerInit[\"name\"];\n  getOAuthToken: Spotify.PlayerInit[\"getOAuthToken\"];\n  initialVolume?: Spotify.PlayerInit[\"volume\"];\n  connectOnInitialized?: boolean;\n  children?: React.ReactNode;\n};\n\nexport const WebPlaybackSDK: React.FC<WebPlaybackSDKProps> = ({\n  children,\n  initialDeviceName,\n  getOAuthToken,\n  initialVolume,\n  connectOnInitialized = true,\n}) => {\n  useEffect(() => {\n    // load Web Playback SDK.\n    const script = document.createElement(\"script\");\n    script.src = SPOTIFY_WEB_PLAYBACK_SDK_URL;\n    document.body.appendChild(script);\n\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, []);\n\n  return (\n    <WebPlaybackSDKReadyProvider>\n      <SpotifyPlayerProvider\n        initialDeviceName={initialDeviceName}\n        getOAuthToken={getOAuthToken}\n        initialVolume={initialVolume}\n        connectOnInitialized={connectOnInitialized}>\n        <PlaybackStateProvider>\n          <DeviceProvider>\n            <ErrorStateProvider>{children}</ErrorStateProvider>\n          </DeviceProvider>\n        </PlaybackStateProvider>\n      </SpotifyPlayerProvider>\n    </WebPlaybackSDKReadyProvider>\n  );\n};\n"],"names":["MUST_BE_WRAPPED_MESSAGE","SPOTIFY_WEB_PLAYBACK_SDK_URL","WebPlaybackSDKReadyContext","createContext","undefined","WebPlaybackSDKReadyProvider","children","useState","webPlaybackSDKReady","setWebPlaybackSDKReady","useEffect","window","onSpotifyWebPlaybackSDKReady","React","Provider","value","useWebPlaybackSDKReady","useContext","Error","PlayerContext","SpotifyPlayerProvider","initialDeviceName","getOAuthToken","initialVolume","connectOnInitialized","player","setPlayer","getOAuthTokenRef","useRef","current","Spotify","Player","name","callback","volume","connect","disconnect","useSpotifyPlayer","DeviceContext","DeviceProvider","device","setDevice","ready","status","notReady","addListener","removeListener","usePlayerDevice","ErrorStateContext","ErrorStateProvider","errorState","setErrorState","onInitializationError","error","type","onAuthenticationError","onAccountError","onPlaybackError","useErrorState","PlaybackStateContext","PlaybackStateProvider","playbackState","setPlaybackState","playerStateChanged","state","usePlaybackState","interval","durationMS","fromContext","playbackStateIsNull","paused","intervalId","setInterval","getCurrentState","newState","clearInterval","WebPlaybackSDK","script","document","createElement","src","body","appendChild","removeChild"],"mappings":"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"}